# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Project(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, lat: int=None, lon: int=None, sound: int=None, created: datetime=None):  # noqa: E501
        """Project - a model defined in Swagger

        :param id: The id of this Project.  # noqa: E501
        :type id: int
        :param lat: The lat of this Project.  # noqa: E501
        :type lat: int
        :param lon: The lon of this Project.  # noqa: E501
        :type lon: int
        :param sound: The sound of this Project.  # noqa: E501
        :type sound: int
        :param created: The created of this Project.  # noqa: E501
        :type created: datetime
        """
        self.swagger_types = {
            'id': int,
            'lat': int,
            'lon': int,
            'sound': int,
            'created': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'lat': 'lat',
            'lon': 'lon',
            'sound': 'sound',
            'created': 'created'
        }
        self._id = id
        self._lat = lat
        self._lon = lon
        self._sound = sound
        self._created = created

    @classmethod
    def from_dict(cls, dikt) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Project of this Project.  # noqa: E501
        :rtype: Project
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Project.


        :return: The id of this Project.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Project.


        :param id: The id of this Project.
        :type id: int
        """

        self._id = id

    @property
    def lat(self) -> int:
        """Gets the lat of this Project.


        :return: The lat of this Project.
        :rtype: int
        """
        return self._lat

    @lat.setter
    def lat(self, lat: int):
        """Sets the lat of this Project.


        :param lat: The lat of this Project.
        :type lat: int
        """

        self._lat = lat

    @property
    def lon(self) -> int:
        """Gets the lon of this Project.


        :return: The lon of this Project.
        :rtype: int
        """
        return self._lon

    @lon.setter
    def lon(self, lon: int):
        """Sets the lon of this Project.


        :param lon: The lon of this Project.
        :type lon: int
        """

        self._lon = lon

    @property
    def sound(self) -> int:
        """Gets the sound of this Project.


        :return: The sound of this Project.
        :rtype: int
        """
        return self._sound

    @sound.setter
    def sound(self, sound: int):
        """Sets the sound of this Project.


        :param sound: The sound of this Project.
        :type sound: int
        """

        self._sound = sound

    @property
    def created(self) -> datetime:
        """Gets the created of this Project.


        :return: The created of this Project.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this Project.


        :param created: The created of this Project.
        :type created: datetime
        """

        self._created = created
