# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Dust(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, created: datetime=None, pm25: float=None, pm10: float=None, aqi: int=None, lat: float=None, lon: float=None):  # noqa: E501
        """Dust - a model defined in Swagger

        :param id: The id of this Dust.  # noqa: E501
        :type id: int
        :param created: The created of this Dust.  # noqa: E501
        :type created: datetime
        :param pm25: The pm25 of this Dust.  # noqa: E501
        :type pm25: float
        :param pm10: The pm10 of this Dust.  # noqa: E501
        :type pm10: float
        :param aqi: The aqi of this Dust.  # noqa: E501
        :type aqi: int
        :param lat: The lat of this Dust.  # noqa: E501
        :type lat: float
        :param lon: The lon of this Dust.  # noqa: E501
        :type lon: float
        """
        self.swagger_types = {
            'id': int,
            'created': datetime,
            'pm25': float,
            'pm10': float,
            'aqi': int,
            'lat': float,
            'lon': float
        }

        self.attribute_map = {
            'id': 'id',
            'created': 'created',
            'pm25': 'pm25',
            'pm10': 'pm10',
            'aqi': 'aqi',
            'lat': 'lat',
            'lon': 'lon'
        }
        self._id = id
        self._created = created
        self._pm25 = pm25
        self._pm10 = pm10
        self._aqi = aqi
        self._lat = lat
        self._lon = lon

    @classmethod
    def from_dict(cls, dikt) -> 'Dust':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Dust of this Dust.  # noqa: E501
        :rtype: Dust
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Dust.


        :return: The id of this Dust.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Dust.


        :param id: The id of this Dust.
        :type id: int
        """

        self._id = id

    @property
    def created(self) -> datetime:
        """Gets the created of this Dust.


        :return: The created of this Dust.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this Dust.


        :param created: The created of this Dust.
        :type created: datetime
        """

        self._created = created

    @property
    def pm25(self) -> float:
        """Gets the pm25 of this Dust.


        :return: The pm25 of this Dust.
        :rtype: float
        """
        return self._pm25

    @pm25.setter
    def pm25(self, pm25: float):
        """Sets the pm25 of this Dust.


        :param pm25: The pm25 of this Dust.
        :type pm25: float
        """

        self._pm25 = pm25

    @property
    def pm10(self) -> float:
        """Gets the pm10 of this Dust.


        :return: The pm10 of this Dust.
        :rtype: float
        """
        return self._pm10

    @pm10.setter
    def pm10(self, pm10: float):
        """Sets the pm10 of this Dust.


        :param pm10: The pm10 of this Dust.
        :type pm10: float
        """

        self._pm10 = pm10

    @property
    def aqi(self) -> int:
        """Gets the aqi of this Dust.


        :return: The aqi of this Dust.
        :rtype: int
        """
        return self._aqi

    @aqi.setter
    def aqi(self, aqi: int):
        """Sets the aqi of this Dust.


        :param aqi: The aqi of this Dust.
        :type aqi: int
        """

        self._aqi = aqi

    @property
    def lat(self) -> float:
        """Gets the lat of this Dust.


        :return: The lat of this Dust.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat: float):
        """Sets the lat of this Dust.


        :param lat: The lat of this Dust.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self) -> float:
        """Gets the lon of this Dust.


        :return: The lon of this Dust.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon: float):
        """Sets the lon of this Dust.


        :param lon: The lon of this Dust.
        :type lon: float
        """

        self._lon = lon
